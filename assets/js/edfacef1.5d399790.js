"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[506],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},748:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],s={slug:"/StateManagement",title:"State Management \ud83d\uddc3\ufe0f"},c=void 0,u={unversionedId:"Guides/3_4_StateManagement",id:"Guides/3_4_StateManagement",title:"State Management \ud83d\uddc3\ufe0f",description:"This boilerplate use Redux-Toolkit",source:"@site/docs/3_Guides/3_4_StateManagement.md",sourceDirName:"3_Guides",slug:"/StateManagement",permalink:"/xtendly-prosperna-react-native-boilerplate/docs/StateManagement",editUrl:"https://github.com/thecodingmachine/react-native-boilerplate/edit/master/website-documentation/docs/docs/3_Guides/3_4_StateManagement.md",tags:[],version:"current",frontMatter:{slug:"/StateManagement",title:"State Management \ud83d\uddc3\ufe0f"},sidebar:"tutorialSidebar",previous:{title:"Components  \ud83e\udde9",permalink:"/xtendly-prosperna-react-native-boilerplate/docs/Components"},next:{title:"Using Reactotron \ud83d\udc80",permalink:"/xtendly-prosperna-react-native-boilerplate/docs/Reactotron"}},p=[{value:"How is it used in this boilerplate \u2753",id:"how-is-it-used-in-this-boilerplate-",children:[],level:2}],l={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This boilerplate use ",(0,a.kt)("a",{parentName:"p",href:"https://redux-toolkit.js.org/introduction/getting-started"},(0,a.kt)("inlineCode",{parentName:"a"},"Redux-Toolkit")),"\nand ",(0,a.kt)("a",{parentName:"p",href:"https://redux-toolkit.js.org/rtk-query/overview"},(0,a.kt)("inlineCode",{parentName:"a"},"RTKQuery")),"\nto deal with business side.\nWe use them because they are often used by the community, very trendy and easy to debug."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://redux-toolkit.js.org/rtk-query/overview"},(0,a.kt)("inlineCode",{parentName:"a"},"RTKQuery"))," is a powerful data fetching and caching tool.\n",(0,a.kt)("strong",{parentName:"p"},"So we using it for asynchronous api calls.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://redux-toolkit.js.org/introduction/getting-started"},(0,a.kt)("inlineCode",{parentName:"a"},"Redux-Toolkit"))," is intended to be the standard way to write Redux logic.\n",(0,a.kt)("strong",{parentName:"p"},"So we using it for synchronous operations.")),(0,a.kt)("h2",{id:"how-is-it-used-in-this-boilerplate-"},"How is it used in this boilerplate \u2753"),(0,a.kt)("p",null,"\ud83d\udea7 It's a Work In Progress section \ud83d\udea7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/redux/configureStore.ts"',title:'"src/redux/configureStore.ts"'},'import AsyncStorage from "@react-native-async-storage/async-storage";\nimport { configureStore } from "@reduxjs/toolkit";\nimport { useDispatch } from "react-redux";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from "redux-persist";\nimport rootReducer from "./rootReducer";\n\nconst persistConfig = {\n  key: "root",\n  storage: AsyncStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => {\n    const middlewares = getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    });\n\n    if (__DEV__) {\n      const createDebugger = require("redux-flipper").default;\n      middlewares.push(createDebugger());\n    }\n\n    return middlewares;\n  },\n});\n\nconst persistor = persistStore(store);\n\nexport const configureAppStore = () => ({ store, persistor });\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n')))}d.isMDXComponent=!0}}]);